[{"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\index.js":"1","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\reportWebVitals.js":"2","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\App.js":"3","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\Router.js":"4","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\router-config.js":"5","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\hooks\\useAuthen.js":"6","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\HomePage\\index.js":"7","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Devices\\index.js":"8","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Login\\index.js":"9","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Profile\\index.js":"10","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Statistics\\index.js":"11","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\services\\authenService.js":"12","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Login\\context.js":"13","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Devices\\context.js":"14","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Profile\\context.js":"15","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Statistics\\context.js":"16","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\HomePage\\components\\Cards.js":"17","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Devices\\components\\AddModal.js":"18","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\HomePage\\components\\WorldMap.js":"19","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Devices\\components\\CardDevice.js":"20","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Statistics\\components\\BarChart.js":"21","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Statistics\\components\\DeviceLocation.js":"22","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Statistics\\components\\DeviceDetail.js":"23","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\layout\\components\\NavTop\\NavTop.js":"24","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\layout\\components\\NavBottom\\Footer.js":"25","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\constant\\request.js":"26","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\constant\\toast.js":"27","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\services\\airVisualService.js":"28","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\services\\devicesServices.js":"29","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\HomePage\\components\\CardItem.js":"30","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\HomePage\\context.js":"31","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\HomePage\\components\\NearestCityInfo.js":"32","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Devices\\components\\ModalDevices.js":"33","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\utils\\iDate.js":"34","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\layout\\components\\NavTop\\NavUser.js":"35","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\configs\\navTopConfigs.js":"36","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\ModeScreen\\DarkMode.js":"37"},{"size":517,"mtime":1704543986923,"results":"38","hashOfConfig":"39"},{"size":375,"mtime":1704543986930,"results":"40","hashOfConfig":"39"},{"size":1102,"mtime":1704543986900,"results":"41","hashOfConfig":"39"},{"size":1930,"mtime":1704543986904,"results":"42","hashOfConfig":"39"},{"size":300,"mtime":1704543986930,"results":"43","hashOfConfig":"39"},{"size":1049,"mtime":1704543986922,"results":"44","hashOfConfig":"39"},{"size":443,"mtime":1704543986939,"results":"45","hashOfConfig":"39"},{"size":1271,"mtime":1704543986934,"results":"46","hashOfConfig":"39"},{"size":5024,"mtime":1704543986943,"results":"47","hashOfConfig":"39"},{"size":6310,"mtime":1704543986945,"results":"48","hashOfConfig":"39"},{"size":899,"mtime":1704543986949,"results":"49","hashOfConfig":"39"},{"size":1236,"mtime":1704543986952,"results":"50","hashOfConfig":"39"},{"size":1962,"mtime":1704543986942,"results":"51","hashOfConfig":"39"},{"size":2936,"mtime":1704543986933,"results":"52","hashOfConfig":"39"},{"size":1146,"mtime":1704543986944,"results":"53","hashOfConfig":"39"},{"size":1362,"mtime":1704543986949,"results":"54","hashOfConfig":"39"},{"size":1916,"mtime":1704543986937,"results":"55","hashOfConfig":"39"},{"size":2158,"mtime":1704543986931,"results":"56","hashOfConfig":"39"},{"size":4559,"mtime":1704543986938,"results":"57","hashOfConfig":"39"},{"size":2378,"mtime":1704543986932,"results":"58","hashOfConfig":"39"},{"size":3799,"mtime":1704543986947,"results":"59","hashOfConfig":"39"},{"size":1368,"mtime":1704543986948,"results":"60","hashOfConfig":"39"},{"size":4093,"mtime":1704543986947,"results":"61","hashOfConfig":"39"},{"size":3758,"mtime":1704543986925,"results":"62","hashOfConfig":"39"},{"size":3748,"mtime":1704543986924,"results":"63","hashOfConfig":"39"},{"size":4001,"mtime":1704543986919,"results":"64","hashOfConfig":"39"},{"size":398,"mtime":1704543986921,"results":"65","hashOfConfig":"39"},{"size":1377,"mtime":1704543986950,"results":"66","hashOfConfig":"39"},{"size":2897,"mtime":1704543986952,"results":"67","hashOfConfig":"39"},{"size":609,"mtime":1704543986936,"results":"68","hashOfConfig":"39"},{"size":1429,"mtime":1704543986939,"results":"69","hashOfConfig":"39"},{"size":7550,"mtime":1704543986938,"results":"70","hashOfConfig":"39"},{"size":2198,"mtime":1704543986933,"results":"71","hashOfConfig":"39"},{"size":2355,"mtime":1704543986962,"results":"72","hashOfConfig":"39"},{"size":3878,"mtime":1704543986926,"results":"73","hashOfConfig":"39"},{"size":293,"mtime":1704543986914,"results":"74","hashOfConfig":"39"},{"size":1183,"mtime":1704543986903,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14nk3ln",{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\index.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\reportWebVitals.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\App.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\Router.js",["167","168","169","170"],"import { useCallback, useState } from 'react';\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport useAuthen from './hooks/useAuthen';\r\nimport { AuthenRouter, NotAuthenRouter } from './router-config';\r\nimport Devices from './screens/Devices';\r\nimport HomePage from './screens/HomePage';\r\nimport Login from './screens/Login';\r\nimport Profile from './screens/Profile';\r\nimport Statistics from './screens/Statistics';\r\nconst AppRouter = () => {\r\n  const [routerConfig, setRouterConfig] = useState([]);\r\n\r\n  const { isAuthenticated } = useAuthen()\r\n  const getConfig = async () => setRouterConfig(!isAuthenticated ? NotAuthenRouter : AuthenRouter);\r\n  // useEffect(() => {\r\n  //   getConfig();\r\n  // }, [isAuthenticated])\r\n\r\n  const renderRouter = useCallback(() => {\r\n    if (routerConfig.length === 0)\r\n      return null;\r\n    const ui = routerConfig.map((router, index) => {\r\n      const { path, Component, fullLayout } = router;\r\n      return <Route exact key={index} path={path}\r\n        element={<Login />}\r\n      />\r\n    })\r\n    // ui.push(<Navigate to=\"/\" />)\r\n    return ui\r\n  }, [routerConfig]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    // Set the directory path if you are deploying in sub-folder\r\n    <BrowserRouter>\r\n      <Routes>\r\n        {/* {renderRouter()} */}\r\n        {isAuthenticated ?\r\n          <>\r\n            <Route path=\"/\" element={<HomePage />} />\r\n            <Route path=\"/user-profile\" element={<Profile />} />\r\n            <Route path=\"/devices\" element={<Devices />} />\r\n            <Route path=\"/devices/:id\" element={<Statistics />} />\r\n          </>\r\n          :\r\n          <>\r\n            <Route path=\"/\" element={<Login />} />\r\n          </>\r\n        }\r\n\r\n        {/* <Route path=\"/home\" element={<HomePage />} />\r\n        <Route path=\"/\" element={<Login />} /> */}\r\n\r\n      </Routes>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\n\r\nexport default AppRouter\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\router-config.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\hooks\\useAuthen.js",["171","172","173"],"import { useEffect, useState } from \"react\"\r\nimport { useCookies } from \"react-cookie\";\r\nimport { getUserInfo } from \"../services/authenService\"\r\n\r\nconst useAuthen = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n  const [cookies, setCookie, removeCookie] = useCookies(['userid']);\r\n  const [loading, setLoading] = useState(false)\r\n  const [username, setUsername] = useState('')\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getUserInfo()\r\n      .then((res) => {\r\n        if (Object.keys(res).length !== 0 && res.constructor === Object) {\r\n          setIsAuthenticated(true)\r\n            console.log('huy')\r\n          setUsername(res?.username)\r\n          setCookie(\"userid\", res?._id)\r\n        }\r\n        else{\r\n          setIsAuthenticated(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setIsAuthenticated(false)\r\n      })\r\n      .finally(() =>\r\n        setLoading(false))\r\n  }, [isAuthenticated])\r\n\r\n  return { isAuthenticated, loading, username, setIsAuthenticated }\r\n}\r\nexport default useAuthen\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\HomePage\\index.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Devices\\index.js",["174"],"import React, { useState } from 'react'\r\nimport tw from 'twin.macro'\r\nimport NavTop from '../../layout/components/NavTop/NavTop'\r\nimport AddModal from './components/AddModal'\r\nimport CardDevice from './components/CardDevice'\r\nimport { DevicesContextProvider, useDevicesContext } from './context'\r\n\r\n\r\nconst DevicesImpl = () => {\r\n  const { listDevices, setOpenAddModal, openAddModal } = useDevicesContext()\r\n\r\n  const CardContainer = tw.div`flex flex-wrap w-full place-content-center`\r\n  const AddButton = tw.button`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg border-none float-right mr-5 cursor-pointer`\r\n  return (\r\n\r\n    <>\r\n      <NavTop />\r\n      <h1 style={{ marginTop: '8rem' }}>Devices Management</h1>\r\n      <AddButton onClick={() => setOpenAddModal(true)}>+ Add Device</AddButton>\r\n      <CardContainer>\r\n        {listDevices?.length > 0 && listDevices?.map((i) => (\r\n          <CardDevice key={listDevices.indexOf(i)} item={i} />\r\n        ))}\r\n\r\n      </CardContainer>\r\n      {/* <CardDevice/> */}\r\n      {openAddModal && <AddModal />}\r\n      {/*<div className=\"blob\" style={{marginTop:'-450px'}}/>*/}\r\n    </>\r\n  )\r\n}\r\nconst Devices = () => <DevicesContextProvider><DevicesImpl /></DevicesContextProvider>\r\nexport default Devices\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Login\\index.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Profile\\index.js",["175","176","177"],"import React, { useRef, useState } from 'react';\r\nimport { Briefcase, Facebook, GitHub, Instagram, Twitch, Twitter, Youtube } from 'react-feather';\r\nimport ReactMapGL, { GeolocateControl, Marker } from 'react-map-gl';\r\nimport tw, { styled } from 'twin.macro';\r\nimport NavTop from '../../layout/components/NavTop/NavTop';\r\nimport { ProfileContextProvider, useProfileContext } from './context';\r\nimport './style.css';\r\nconst ContainerPage = styled.div`\r\n${'' /* ${`background-image:url('https://source.unsplash.com/1L71sPT5XKc'); `}, */}\r\n  ${tw`font-sans antialiased text-gray-900 leading-normal tracking-wider bg-cover`}\r\n  `\r\nconst CircleIcon = styled.div(({ props }) => [\r\n  tw`rounded-full text-white w-10 h-10 text-xs text-center`,\r\n  props <= 50 && tw`bg-green-500`,\r\n  props <= 100 && props >= 51 && tw`bg-yellow-500`,\r\n  props <= 150 && props >= 101 && tw`bg-red-300`,\r\n  props <= 200 && props >= 151 && tw`bg-red-500`,\r\n  props <= 300 && props >= 201 && tw`bg-purple-500`,\r\n  props > 300 && tw`bg-red-900`\r\n])\r\n\r\nconst ImageContainer = tw.div`p-4 md:p-12 text-center lg:text-left`\r\nconst MainCol = tw.div`w-full lg:w-3/5 rounded-lg lg:rounded-l-lg lg:rounded-r-none shadow-2xl bg-white opacity-75 mx-6 lg:mx-0`\r\nconst MobileView = styled.div`\r\n${`background-image: url('https://source.unsplash.com/MP0IUfwrn0A')`},\r\n  ${tw`block lg:hidden rounded-full shadow-xl mx-auto -mt-16 h-48 w-48 bg-cover bg-center`}\r\n`\r\nconst MainContainer = tw.div`max-w-4xl flex items-center h-auto lg:h-screen flex-wrap mx-auto my-32 lg:my-0`\r\nconst H1Title = tw.h1`text-3xl font-bold pt-8 lg:pt-0`\r\nconst TitleContainer = tw.div`mx-auto lg:mx-0 w-4/5 pt-3 border-b-2 border-green-500 opacity-25`\r\nconst Title1 = tw.p`pt-4 text-base font-bold flex items-center justify-center lg:justify-start`\r\nconst Title2 = tw.p`pt-2 text-gray-600 text-xs lg:text-sm flex items-center justify-center lg:justify-start`\r\nconst Title3 = tw.p`pt-8 text-sm`\r\nconst ButtonContainer = tw.div`pt-12 pb-8`\r\nconst ButtonTouch = tw.button`bg-green-700 hover:bg-green-900 text-white font-bold py-2 px-4 rounded-full`\r\nconst MediaContainer = tw.div`mt-6 px-4 pb-16 lg:pb-0 w-4/5 lg:w-full mx-auto flex flex-wrap items-center justify-between`\r\nconst ImgCol = tw.div`w-full lg:w-2/5`\r\nconst Avatar = tw.img`rounded-none lg:rounded-lg shadow-2xl hidden lg:block`\r\n\r\nconst ProfileImpl = () => {\r\n  const { user, listDevices, listPublicDevice } = useProfileContext()\r\n  const mapRef = useRef();\r\n  const geolocateControlStyle = {\r\n    right: 10,\r\n    top: 10\r\n  };\r\n\r\n  const [viewport, setViewport] = useState({\r\n    width: \"200%\",\r\n    height: '605px',\r\n    latitude: 21.018,\r\n    longitude: 105.800,\r\n    zoom: 4\r\n  });\r\n  const listHistory = listDevices[listDevices?.length - 1]?.stateHistory\r\n  const listPublicHistory = listPublicDevice[listPublicDevice?.length - 1]?.stateHistory\r\n  return (\r\n    <>\r\n      <NavTop />\r\n      <ContainerPage>\r\n        <MainContainer>\r\n          <MainCol>\r\n            <ImageContainer>\r\n              <MobileView />\r\n              <H1Title> Xin Chào {user?.username}</H1Title>\r\n              <TitleContainer></TitleContainer>\r\n              <Title1><Briefcase />&nbsp; &nbsp;Bạn làm gì ?</Title1>\r\n              <Title3>Mô tả ngắn về bản thân , có thể bao gồm thông tin về nghề nghiệp, sở thích, kinh nghiệm, mục tiêu nghề nghiệp và nhiều thông tin khác.</Title3>\r\n            </ImageContainer>\r\n            <MediaContainer>\r\n              <Facebook />\r\n              <Twitter />\r\n              <GitHub />\r\n              <Instagram />\r\n              <Youtube />\r\n              <Twitch />\r\n            </MediaContainer>\r\n            <ButtonContainer>\r\n              {/*<ButtonTouch>*/}\r\n              {/*  Manage your device*/}\r\n              {/*</ButtonTouch>*/}\r\n            </ButtonContainer>\r\n          </MainCol>\r\n\r\n          <ImgCol>\r\n            {/* <Avatar className='avatar' src=\"https://source.unsplash.com/MP0IUfwrn0A\" alt=\"avt\" /> */}\r\n            <ReactMapGL\r\n              ref={mapRef}\r\n              {...viewport}\r\n              mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n              onViewportChange={nextViewport => setViewport(nextViewport)}\r\n              mapboxApiAccessToken={process.env.REACT_APP_MAP_API_TOKEN}\r\n            >\r\n              {\r\n                listDevices.length > 0 && listDevices?.map((item) => (\r\n                  <div key={item?._id}>\r\n                    <Marker\r\n                      key={item?._id || 1122}\r\n                      longitude={parseFloat(item?.location[1]) || 105.123}\r\n                      latitude={parseFloat(item?.location[0]) || 21.437}\r\n                    >\r\n                      <CircleIcon style={{ paddingTop: 1 }} props={listHistory[listHistory.length - 1]?.dust || 0}>\r\n                        <p>{listHistory[listHistory.length - 1]?.dust || 0}</p>\r\n                      </CircleIcon>\r\n\r\n                    </Marker>\r\n                  </div>\r\n                ))\r\n              }\r\n              {\r\n                listPublicDevice.length > 0 && listPublicDevice?.map((item) => (\r\n                  <div key={item?._id}>\r\n                    <Marker\r\n                      key={item?._id || 1122}\r\n                      longitude={parseFloat(item?.location[1]) || 105.123}\r\n                      latitude={parseFloat(item?.location[0]) || 21.437}\r\n                    >\r\n                      <CircleIcon style={{ background: '#FFA35C', paddingTop: 1 }} props={listPublicHistory[listPublicHistory.length - 1]?.dust || 200}>\r\n                        <p>{listPublicHistory[listPublicHistory.length - 1]?.dust || 200}</p>\r\n                      </CircleIcon>\r\n\r\n                    </Marker>\r\n                  </div>\r\n                ))\r\n              }\r\n              <GeolocateControl\r\n                style={geolocateControlStyle}\r\n                positionOptions={{ enableHighAccuracy: true }}\r\n                trackUserLocation={true}\r\n                showUserLocation={true}\r\n                showUserHeading={true}\r\n                auto\r\n              />\r\n            </ReactMapGL>\r\n          </ImgCol>\r\n        </MainContainer>\r\n\r\n      </ContainerPage>\r\n    </>\r\n  )\r\n}\r\nconst Profile = () => <ProfileContextProvider><ProfileImpl /></ProfileContextProvider>\r\n\r\nexport default Profile\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Statistics\\index.js",["178"],"import React, { memo } from 'react'\r\nimport { StatisticsContextProvider, useStatisticsContext } from './context'\r\nimport NavTop from '../../layout/components/NavTop/NavTop';\r\nimport BarChart from './components/BarChart';\r\nimport DeviceLocation from './components/DeviceLocation';\r\nimport DeviceDetail from './components/DeviceDetail';\r\nconst StatisticsImpl = () => {\r\n  const { device, nearestCity } = useStatisticsContext()\r\n\r\n  return (\r\n    <>\r\n      <NavTop />\r\n      <div style={{ marginTop: '100px' }}>\r\n        <div style={{display:'flex', gap:'50px'}}>\r\n          <DeviceLocation data={device} />\r\n          <DeviceDetail item={device} info={nearestCity} />\r\n        </div>\r\n        <BarChart deviceItem={device?.stateHistory} />\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\nconst Statistics = () => <StatisticsContextProvider><StatisticsImpl /></StatisticsContextProvider>\r\nexport default Statistics\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\services\\authenService.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Login\\context.js",["179","180","181","182","183","184"],"import { createContext, useContext, useMemo, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toastError, toastSuccess } from \"../../constant/toast\";\r\nimport { login, signup } from \"../../services/authenService\";\r\n\r\n\r\n//context\r\nexport const LoginContext = createContext({})\r\n\r\n//hook\r\nexport const useLoginContext = () => useContext(LoginContext)\r\n\r\n//provider\r\nexport const LoginContextProvider = ({ children }) => {\r\n  const navigate = useNavigate()\r\n  const [cookies, setCookie, removeCookie] = useCookies(['currentuser']);\r\n  const [userid, setUserid] = useState(\"\")\r\n  const handleSignup = async (username, password) => {\r\n    let tmp = `{ \"username\": \"${username}\", \"password\": \"${password}\" }`\r\n    let params = JSON.parse(tmp)\r\n    if (username && password) {\r\n      const response = await signup(params)\r\n      if (response?.token) {\r\n        toastSuccess(\"Success Notification !\")\r\n        await setCookie(\"currentuser\", response?.token)\r\n\r\n        setTimeout(() => window.location.reload(), 2000)\r\n\r\n      }\r\n      else\r\n        toastError(response?.error)\r\n    }\r\n    else {\r\n      toastError(\"Error\")\r\n    }\r\n  }\r\n\r\n  const handleLogin = async (username, password) => {\r\n    let tmp = `{ \"username\": \"${username}\", \"password\": \"${password}\" }`\r\n    let params = JSON.parse(tmp)\r\n\r\n    if (username && password) {\r\n      const response = await login(params)\r\n\r\n      if (response?.token) {\r\n        toastSuccess(\"Success Notification !\")\r\n        await setCookie(\"currentuser\", response?.token)\r\n\r\n        setTimeout(() => window.location.reload(), 2000)\r\n\r\n      }\r\n      else\r\n        toastError(response?.error)\r\n    }\r\n    else {\r\n      toastError(\"Error\")\r\n    }\r\n  }\r\n\r\n\r\n  const value = useMemo(() => ({\r\n    handleSignup, handleLogin\r\n  }),\r\n    [])\r\n  return (\r\n    <LoginContext.Provider value={value}>\r\n      {children}\r\n    </LoginContext.Provider>\r\n  )\r\n}\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Devices\\context.js",["185"],"import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { toastError, toastSuccess } from \"../../constant/toast\";\r\nimport { addDeviceByIdFetch, deleteDeviceById, getDeviceById, getUserDevices, updateDeviceByIdFetch } from \"../../services/devicesServices\";\r\n\r\n//context\r\nexport const DevicesContext = createContext({})\r\n\r\n//hook\r\nexport const useDevicesContext = () => useContext(DevicesContext)\r\n\r\n//provider\r\nexport const DevicesContextProvider = ({ children }) => {\r\n  const [listDevices, setListDevices] = useState([])\r\n  const [openModal, setOpenModal] = useState(false)\r\n  const [deviceItem, setDeviceItem] = useState()\r\n  const [openAddModal, setOpenAddModal] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    getListDevices()\r\n\r\n  }, [])\r\n\r\n  const getListDevices = async () => {\r\n    const res = await getUserDevices()\r\n    setListDevices(res?.devices)\r\n  }\r\n\r\n  const deleteDevice = async (id) => {\r\n    const res = await deleteDeviceById(id)\r\n    if (!res?.error) {\r\n      toastSuccess(\"Delete Complete!\")\r\n      setTimeout(() => {\r\n        window.location.reload()\r\n      }, 2000);\r\n    } else {\r\n      toastError(\"Delete Incomplete!\")\r\n    }\r\n  }\r\n\r\n  const updateDevice = async (id, name, state) => {\r\n    let tmp = `{ \"deviceName\": \"${name}\", \"connectState\": \"${state}\" }`\r\n    let params = JSON.parse(tmp)\r\n    // const res = await updateDeviceById(id, params)\r\n    const res = await updateDeviceByIdFetch(id, params)\r\n    if (!res?.error) {\r\n      toastSuccess(\"Update Complete!\")\r\n      await getListDevices()\r\n      window.location.reload()\r\n    } else {\r\n      toastError(\"Update Incomplete!\")\r\n    }\r\n  }\r\n\r\n  const addDevice = async (id, name, state) => {\r\n    let currentPosition = []\r\n    navigator.geolocation.getCurrentPosition(async function (pos) {\r\n      currentPosition.push(pos?.coords?.latitude)\r\n      currentPosition.push(pos?.coords?.longitude)\r\n      let tmp = `{ \"embedId\": \"${id}\", \"deviceName\": \"${name}\", \"connectState\": \"OFF\"}`\r\n      let params = JSON.parse(tmp)\r\n      params.location = [pos?.coords?.latitude, pos?.coords?.longitude]\r\n      const res = await addDeviceByIdFetch(params)\r\n      if (!res?.error) {\r\n        toastSuccess(\"Add Complete!\")\r\n        await getListDevices()\r\n        window.location.reload()\r\n      } else {\r\n        toastError(\"Add Incomplete!\")\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  const getDeviceItemById = async (id) => {\r\n    let tmp = await getDeviceById(id)\r\n    if (tmp?.device) setDeviceItem(tmp?.device)\r\n  }\r\n\r\n  const value = useMemo(() => ({\r\n    listDevices, getListDevices, deleteDevice, updateDevice, openModal,\r\n    setOpenModal, getDeviceItemById, deviceItem, openAddModal, setOpenAddModal, addDevice\r\n  }),\r\n    // eslint-disable-next-line no-sequences\r\n    [listDevices, openModal, deviceItem, openAddModal])\r\n  return (\r\n    <DevicesContext.Provider value={value}>\r\n      {children}\r\n    </DevicesContext.Provider>\r\n  )\r\n}","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Profile\\context.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Statistics\\context.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\HomePage\\components\\Cards.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Devices\\components\\AddModal.js",["186"],"import React, { useState } from 'react'\r\nimport { X } from 'react-feather'\r\nimport tw from 'twin.macro'\r\nimport { toastError } from '../../../constant/toast'\r\nimport { useDevicesContext } from '../context'\r\nimport '../style.css'\r\n\r\nconst LabelText = tw.label`float-left mb-3 text-black`\r\nconst ContainerModal = tw.div`w-full`\r\nconst PillButton = tw.input`cursor-pointer bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full border-none w-full mt-4`\r\nconst AddModal = () => {\r\n  const [deviceName, setDeviceName] = useState('')\r\n  const [deviceId, setDeviceId] = useState('')\r\n  const { addDevice, setOpenAddModal } = useDevicesContext()\r\n  const [stateDevice, setStateDevice] = useState(false)\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-window\">\r\n        <ContainerModal>\r\n          <form onSubmit={(e) => {\r\n            e.preventDefault()\r\n            if (deviceName !== '' && deviceId !== '')\r\n              addDevice(deviceId, deviceName, stateDevice)\r\n            else toastError('Nothing was changed!')\r\n          }}>\r\n            <div className=\"modal-close\" onClick={() => setOpenAddModal(false)}><X /></div>\r\n            <h1 style={{ color: 'black' }}>Device</h1><br />\r\n            <LabelText>Device Id</LabelText>\r\n            <input type=\"text\" className='inputdevice' placeholder='Embed ID' onChange={(e) => setDeviceId(e.target.value)} />\r\n            <LabelText>Device Name</LabelText>\r\n            <input type=\"text\" className='inputdevice' placeholder='Device Name' onChange={(e) => setDeviceName(e.target.value)} />\r\n            <LabelText>Device State</LabelText>\r\n            <div style={{ float: 'right' }}>\r\n              <label className=\"switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  // onChange={e => setStateDevice(e.target.checked ? \"ON\" : \"OFF\")} \r\n                  checked={false}\r\n                />\r\n                <span className=\"slider round\"></span>\r\n              </label>\r\n            </div>\r\n            <PillButton type=\"submit\" value=\"Add\" />\r\n          </form>\r\n        </ContainerModal>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default AddModal\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\HomePage\\components\\WorldMap.js",["187"],"import React, { memo, useRef, useState } from 'react';\r\nimport ReactMapGL, { FullscreenControl, GeolocateControl, Marker, Popup } from 'react-map-gl';\r\nimport tw, { styled } from 'twin.macro';\r\nimport { MapContextProvider, useMapContext } from '../context';\r\nimport \"../style.css\";\r\nimport NearestCityInfo from './NearestCityInfo';\r\n\r\nconst HeaderContainer = tw.div`flex pt-8 justify-around items-center`\r\nconst Header = tw.h1``\r\nconst SearchBar = tw.input`w-1/2 outline-none h-12 rounded-xl border-none items-end shadow-xl p-2 font-semibold`\r\nconst PageContainer = tw.div`p-5 z-10`\r\n\r\nconst geolocateControlStyle = {\r\n  right: 10,\r\n  top: 10\r\n};\r\n\r\nconst CircleIcon = styled.div(({ props }) => [\r\n  tw`rounded-full text-white w-8 h-8 text-sm`,\r\n  props <= 50 && tw`bg-green-500`,\r\n  props <= 100 && props >= 51 && tw`bg-yellow-500`,\r\n  props <= 150 && props >= 101 && tw`bg-red-300`,\r\n  props <= 200 && props >= 151 && tw`bg-red-500`,\r\n  props <= 300 && props >= 201 && tw`bg-purple-500`,\r\n  props > 300 && tw`bg-red-900`\r\n])\r\n\r\nconst WorldMapImpl = () => {\r\n  const mapRef = useRef();\r\n  const { geocodingCity } = useMapContext();\r\n   // console.log(geocodingCity.length)\r\n  const [viewport, setViewport] = useState({\r\n    width: \"50%\",\r\n    height: '805px',\r\n    latitude: 21.437,\r\n    longitude: 105.123,\r\n    zoom: 4\r\n  });\r\n  const [popupIndex, setPopUpIndex] = useState(false)\r\n\r\n  const renderPopup = ({ item }) => {\r\n    return (\r\n      <>\r\n        {popupIndex && (\r\n          <Popup\r\n            tipSize={5}\r\n            anchor=\"bottom-left\"\r\n            longitude={item?.data?.location?.coordinates[0] || 105.123}\r\n            latitude={item?.data?.location?.coordinates[1] || 21.437}\r\n            onMouseLeave={(e) => {\r\n              e.preventDefault();\r\n              setPopUpIndex(false);\r\n            }}\r\n            closeOnClick={true}\r\n          >\r\n\r\n          </Popup>\r\n        )}\r\n      </>\r\n\r\n    )\r\n  }\r\n\r\n  const fullscreenControlStyle = {\r\n    right: 10,\r\n    bottom: 10\r\n  };\r\n\r\n\r\n  setInterval(() => {\r\n    const h1 = document.getElementsByClassName(\"headerPage\");\r\n    h1.onanimationend = function () {\r\n      h1.classList.add(\"anim-end\");\r\n      h1.classList.remove(\"anim-restart\");\r\n    }\r\n  }, 10000);\r\n\r\n\r\n  return (\r\n    <PageContainer>\r\n      <HeaderContainer>\r\n        <Header className='headerPage' id='headerPage'>Khám phá chất lượng không khí bất kỳ đâu trên thế giới</Header>\r\n        {/* <SearchBar placeholder=\"   Your country, city or location ...\" />\r\n        <Search style={{ position: 'absolute', right: 0, marginRight: '6.2rem', background: \"#fff\" }} /> */}\r\n      </HeaderContainer>\r\n      <div style={{ display: 'flex', gap: '50px' }}>\r\n        <ReactMapGL\r\n          ref={mapRef}\r\n          {...viewport}\r\n          mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n          onViewportChange={nextViewport => setViewport(nextViewport)}\r\n          mapboxApiAccessToken={process.env.REACT_APP_MAP_API_TOKEN}>\r\n          {\r\n            geocodingCity.length > 0 && geocodingCity?.map((item) => (\r\n              <div key={geocodingCity.indexOf(item)}>\r\n                <Marker\r\n                  key={item?.data?.city || \"Hanoi\"}\r\n                  longitude={item?.data?.location?.coordinates[0] || 105.123}\r\n                  latitude={item?.data?.location?.coordinates[1] || 21.437}\r\n                  onMouseEnter={(e) => {\r\n                    e.preventDefault();\r\n                    setPopUpIndex(true);\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.preventDefault();\r\n                    setPopUpIndex(false);\r\n                  }}\r\n                >\r\n                  <CircleIcon props={item?.data?.current?.pollution?.aqius || 100}>\r\n                    <p>{item?.data?.current?.pollution?.aqius || 100}</p>\r\n                  </CircleIcon>\r\n\r\n                </Marker>\r\n                {renderPopup(item)}\r\n              </div>\r\n            ))\r\n          }\r\n\r\n          <GeolocateControl\r\n            style={geolocateControlStyle}\r\n            positionOptions={{ enableHighAccuracy: true }}\r\n            trackUserLocation={true}\r\n            showUserLocation={true}\r\n            showUserHeading={true}\r\n            auto\r\n          />\r\n          <FullscreenControl style={fullscreenControlStyle} />\r\n        </ReactMapGL>\r\n        <br />\r\n        <NearestCityInfo />\r\n      </div>\r\n    </PageContainer>\r\n  )\r\n}\r\nconst WorldMap = () => (\r\n  <MapContextProvider>\r\n    <WorldMapImpl />\r\n  </MapContextProvider>\r\n);\r\n\r\nexport default memo(WorldMap)\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Devices\\components\\CardDevice.js",["188"],"import React from 'react'\r\nimport { Edit2, Eye, Trash } from 'react-feather'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport tw from 'twin.macro'\r\nimport { useDevicesContext } from '../context'\r\nimport '../style.css'\r\nimport ModalDevices from './ModalDevices'\r\n\r\nconst ToggleContainer = tw.div`flex items-center justify-center w-full mb-12`\r\nconst LabelToggle = tw.label`flex items-center cursor-pointer ml-5`\r\nconst CardContainer = tw.div`shadow-xl rounded-xl min-w-1/4 m-6`\r\n\r\nconst CardDevice = ({ item }) => {\r\n  const { deleteDevice, openModal, setOpenModal, getDeviceItemById, deviceItem } = useDevicesContext()\r\n  const navigate = useNavigate()\r\n  return (\r\n    <CardContainer>\r\n      <ToggleContainer>\r\n        <div style={{ display: 'block', padding: '1rem' }}>\r\n          <h2>Device's id: {item?._id}</h2>\r\n          <h2>Embed's id: {item?.embedId}</h2>\r\n          <h2>Device's name: {item?.deviceName}</h2>\r\n          <h2>Device's userid: {item?.userId}</h2>\r\n        </div>\r\n        <LabelToggle\r\n        >\r\n          <div style={{ position: 'relative', display: 'flex', paddingRight: '1rem' }}>\r\n\r\n\r\n            <div style={{ display: 'block' }}>\r\n              <div className=\"containerDevice\">\r\n                <div className=\"interior\">\r\n                  <div className=\"btn\" style={{ width: 'fit-content' }}\r\n                    onClick={async () => {\r\n                      getDeviceItemById(item?._id)\r\n                      setOpenModal(true)\r\n                    }\r\n                    }><Edit2 /></div>\r\n                </div>\r\n              </div><br />\r\n              <div className=\"containerDevice\">\r\n                <div className=\"interior\">\r\n                  <div className=\"btn\" style={{ width: 'fit-content' }} onClick={() => deleteDevice(item?._id)}><Trash /></div>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div className=\"containerDevice\">\r\n                <div className=\"interior\">\r\n                  <div className=\"btn\" style={{ width: 'fit-content' }} onClick={() => window.location.replace(`/devices/${item?._id}`)}><Eye /></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {openModal && <ModalDevices item={deviceItem} />}\r\n        </LabelToggle>\r\n\r\n      </ToggleContainer>\r\n\r\n    </CardContainer>\r\n  )\r\n}\r\nexport default CardDevice\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Statistics\\components\\BarChart.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Statistics\\components\\DeviceLocation.js",["189"],"import React, { useRef, useState } from 'react';\r\nimport ReactMapGL, { FullscreenControl, Marker } from 'react-map-gl';\r\nimport {useStatisticsContext} from \"../context\";\r\n\r\n\r\nconst DeviceLocation = ({ data }) => {\r\n  // console.log(data.location[0])\r\n  // const { device } = useStatisticsContext()\r\n  // console.log(device.location)\r\n  const mapRef = useRef();\r\n  const [viewport, setViewport] = useState({\r\n    width: \"50%\",\r\n    height: '805px',\r\n    latitude:   21.018,\r\n    longitude:   105.800 ,\r\n    zoom: 8\r\n  });\r\n  const fullscreenControlStyle = {\r\n    right: 10,\r\n    bottom: 10\r\n  };\r\n\r\n\r\n  return <>\r\n    <ReactMapGL\r\n      ref={mapRef}\r\n      {...viewport}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n      onViewportChange={nextViewport => setViewport(nextViewport)}\r\n      mapboxApiAccessToken={process.env.REACT_APP_MAP_API_TOKEN}>\r\n\r\n      <Marker\r\n        key={data?._id || \"Hanoi\"}\r\n        latitude={ parseFloat(data?.location[0]) || 21.437 }\r\n        longitude={ parseFloat(data?.location[1]) || 105.123 }\r\n\r\n      >\r\n        <div\r\n        style={{ background: '#FFA35C', borderRadius: '50%', width: '50px', height: '50px', paddingTop: '10px', color:'white' }}>\r\n        {data?.deviceName}</div>\r\n      </Marker>\r\n\r\n      <FullscreenControl style={fullscreenControlStyle} />\r\n    </ReactMapGL>\r\n  </>;\r\n}\r\nexport default DeviceLocation\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Statistics\\components\\DeviceDetail.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\layout\\components\\NavTop\\NavTop.js",["190"],"import { motion } from 'framer-motion';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport tw, { styled } from 'twin.macro';\r\nimport navTopConfigs from '../../../configs/navTopConfigs';\r\nimport NavUser from './NavUser';\r\nimport './style.css';\r\n\r\nconst ItemContainer = styled.div`\r\n  ${`height:78px; padding-top:16px;font-size: 30px`}\r\n`\r\nconst LinkItem = styled.span((props) => [\r\n  tw`cursor-pointer font-medium hover:(text-blue-400 text-lg) text-base justify-around `,\r\n  props.isActive && tw`text-blue-400 font-bold`\r\n])\r\nconst Dropdown = styled(motion.div)(() => [\r\n  tw`h-auto w-48 border-t-default border-blue-400 shadow-md bg-gray-100 mt-4 absolute flex flex-col `,\r\n])\r\nconst DropdownItem = tw.div`w-full p-2 cursor-pointer my-1 text-lg text-black border-b-default transform transition-all duration-75 hover:bg-gray-200`\r\nconst HeaderContainer = tw.div`h-20 w-full shadow-md fixed top-0 animate-bounce z-40 flex justify-between`\r\nconst BorderContainer = tw.div`w-full flex xl:max-w-screen-xl lg:max-w-screen-lg md:max-w-screen-md sm:max-w-screen-sm mx-auto`\r\nconst LogoHeader = tw.img`cursor-pointer ml-auto sm:ml-0 h-full`\r\nconst NavBar = tw.div`text-left gap-10 ml-5 mr-10 text-xl hidden md:flex transition-all duration-300 lg:w-1/2 lg:translate-x-0 -translate-x-12 opacity-0 lg:opacity-100 w-1/3  `\r\nconst RightContainer = tw.div`self-center m-2`\r\n\r\n\r\nconst RenderNavItems = () => {\r\n  const params = useLocation();\r\n  const pathName = params.pathname\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [isIndex, setisIndex] = useState(0)\r\n  const handleMouseMove = useCallback((index, isOpen) => {\r\n    setisIndex(index)\r\n    setIsOpen(isOpen)\r\n  }, [])\r\n  const history = useNavigate();\r\n  return (navTopConfigs.map((x, index) => {\r\n    const isActive = !!x.item.find(x => pathName.indexOf(x.navLink) >= 0)\r\n    return (\r\n      <ItemContainer className=\"group\" onMouseMove={() => handleMouseMove(index, true)} onMouseLeave={() => handleMouseMove(index, false)} key={index}>\r\n        <LinkItem isActive={isActive || !pathName.indexOf(x.navLink)} onClick={() => x.item.length === 0 && history(x.navLink)}  >{x.id}</LinkItem>\r\n        {Array.isArray(x.item) && x.item.length > 0 &&\r\n          <Dropdown\r\n            className=\"bg-memu-bar\"\r\n            variants={{\r\n              current: {\r\n                opacity: 1,\r\n                y: 2,\r\n                display: \"\",\r\n              },\r\n              hidden: {\r\n                opacity: 0,\r\n                y: 30,\r\n                display: \"none\",\r\n              },\r\n            }}\r\n            transition={{ duration: 0.2 }}\r\n            initial={'hidden'}\r\n            animate={(isOpen && isIndex === index) ? 'current' : 'hidden'}\r\n          >\r\n            {(x.item || []).map(({ id, navLink }) =>\r\n              <DropdownItem\r\n\r\n                onClick={() => navLink && history.navigate(navLink)}\r\n                key={id}>\r\n                {id}\r\n              </DropdownItem>)}\r\n          </Dropdown>\r\n        }\r\n      </ItemContainer>\r\n    )\r\n  })\r\n  )\r\n}\r\nconst NavTop = ({ OpenClick }) => {\r\n  const history = useNavigate();\r\n  const Open = () => {\r\n    OpenClick && OpenClick()\r\n  }\r\n  return (\r\n    <HeaderContainer className=\"bg-memu-bar\">\r\n      <BorderContainer>\r\n        <LogoHeader src=\"hot-weather-logo.png\" alt=\"Logo\" onClick={() => history('/')} />\r\n        <NavBar>\r\n          <RenderNavItems />\r\n        </NavBar>\r\n        <NavUser />\r\n      </BorderContainer>\r\n      <RightContainer>\r\n      </RightContainer>\r\n      {/* <IconListSideBar src={SideBarIcon} alt=\"sidebar-icon\" onClick={() => Open()} /> */}\r\n    </HeaderContainer>\r\n  )\r\n}\r\nexport default NavTop\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\layout\\components\\NavBottom\\Footer.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\constant\\request.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\constant\\toast.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\services\\airVisualService.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\services\\devicesServices.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\HomePage\\components\\CardItem.js",["191"],"import React from 'react';\r\n\r\nfunction CardItem(props) {\r\n  return (\r\n    <>\r\n      <li className='cards__item'>\r\n        <div className='cards__item__div'>\r\n          <figure className='cards__item__pic-wrap' data-category={props.label}>\r\n            <img\r\n              className='cards__item__img'\r\n              alt='Travel Image'\r\n              src={props.src}\r\n            />\r\n          </figure>\r\n          <div className='cards__item__info'>\r\n            <h5 className='cards__item__text'>{props.text}</h5>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardItem;\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\HomePage\\context.js",["192"],"import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { getListCities, getNearestCity, getSpecializedCity } from \"../../services/airVisualService\";\r\n\r\n//context\r\nexport const MapContext = createContext({})\r\n\r\n//hook\r\nexport const useMapContext = () => useContext(MapContext)\r\n\r\n//provider\r\nexport const MapContextProvider = ({ children }) => {\r\n  const [geocodingCity, setGeocodingCity] = useState([])\r\n  const [nearestCity, setNearestCity] = useState()\r\n\r\n  const getCitiesLocation = async () => {\r\n\r\n    let listInfoCity = await getListCities(\"Hanoi\", \"Vietnam\") || []\r\n  console.log(listInfoCity)\r\n    let promise = listInfoCity?.map((item) => getSpecializedCity(item?.city, \"Hanoi\", \"Vietnam\"))\r\n\r\n    let tmpParam = await Promise.all(promise)\r\n    console.log(tmpParam)\r\n    setGeocodingCity(tmpParam)\r\n  }\r\n\r\n  const infoNearestCity = async () => {\r\n    let info = await getNearestCity()\r\n    setNearestCity(info)\r\n\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    getCitiesLocation()\r\n    infoNearestCity()\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    fetchData()\r\n  }, [])\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const value = useMemo(() => ({\r\n    geocodingCity, nearestCity\r\n  }),\r\n    // eslint-disable-next-line no-sequences\r\n    [geocodingCity, nearestCity])\r\n  return (\r\n    <MapContext.Provider value={value}>\r\n      {children}\r\n    </MapContext.Provider>\r\n  )\r\n}\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\HomePage\\components\\NearestCityInfo.js",["193"],"/* eslint-disable no-fallthrough */\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport tw, { styled } from 'twin.macro';\r\nimport { MapContextProvider, useMapContext } from '../context';\r\nimport '../style.css';\r\n\r\nconst OverViewSumary = styled.div(({ props }) => [\r\n  tw`text-xs justify-between w-full rounded-t-md p-8 bg-green-500`,\r\n  props <= 50 && tw`bg-green-500`,\r\n  props <= 100 && props >= 51 && tw`bg-yellow-500 text-yellow-800`,\r\n  props <= 150 && props >= 101 && tw`bg-red-300 text-red-600`,\r\n  props <= 200 && props >= 151 && tw`bg-red-500 text-red-800`,\r\n  props <= 300 && props >= 201 && tw`bg-purple-500 text-purple-800`,\r\n  props > 300 && tw`bg-red-900 text-white`\r\n])\r\nconst AqiValueWrapper = tw.div`flex-row flex`\r\nconst AqiBox = styled.div(({ props }) => [\r\n  tw`text-white flex-col items-start rounded-default mr-6 p-3 flex bg-green-700 `,\r\n  `width:116px;height:116px`,\r\n  props <= 50 && tw`bg-green-500`,\r\n  props <= 100 && props >= 51 && tw`bg-yellow-700`,\r\n  props <= 150 && props >= 101 && tw`bg-red-500`,\r\n  props <= 200 && props >= 151 && tw`bg-red-700`,\r\n  props <= 300 && props >= 201 && tw`bg-purple-700`,\r\n  props > 300 && tw`bg-red-900`\r\n])\r\n\r\nconst AqiContent = styled.span(({ props }) => [\r\n  props <= 150 && props >= 101 ? tw`text-xl` : tw`text-4xl`\r\n])\r\n\r\nconst AqiUnit = tw.p`text-base uppercase contents pb-4`\r\nconst AqiValue = tw.p`text-2xl contents absolute mb-0`\r\n\r\nconst AqiStatus = tw.p`text-xs font-medium uppercase`\r\n\r\nconst OverViewDetail = tw.div`p-6`\r\nconst OverViewSectionTitle = styled.h3`\r\n  ${`    color: #499fbc; `},\r\n  ${tw`mb-2`}`\r\n\r\nconst OverViewTittle = styled.h3`\r\n${tw`mb-2 font-medium text-xl tracking-normal mb-8 w-full`}`\r\n\r\nconst TableDetail = tw.table`w-full table border-separate space-y-6 text-sm`\r\nconst TableThread = tw.thead`bg-blue-500 text-white`\r\nconst TableContent = styled.th`\r\n  ${tw`text-left p-3 text-base font-medium`}\r\n  `\r\n\r\nconst TableWeatherTr = styled.tr`\r\n${` height: 36px;text-align: -webkit-center; background: #BED6E3 `},\r\n  ${tw`pr-2`}\r\n  `\r\n\r\nconst TableWeatherTd = styled.td(({ props }) => [\r\n  `border-bottom: 1px solid #e6e6e6;height: 36px; `,\r\n  props < 2 && \"font-semibold\"\r\n])\r\n\r\nconst NearestCityInfoImpl = () => {\r\n  const { nearestCity } = useMapContext()\r\n  const [status, setStatus] = useState('')\r\n  const [face, setFace] = useState()\r\n\r\n\r\n  const renderStatus = (props) => {\r\n    if (props <= 50) {\r\n      setStatus(`Tốt`)\r\n      setFace(`/aqi/ic-face-green.svg`)\r\n    }\r\n    else if (props <= 100 && props >= 51) {\r\n      setStatus(`Trung bình`)\r\n      setFace(`/aqi/ic-face-yellow.svg`)\r\n    }\r\n    else if (props <= 150 && props >= 101) {\r\n      setStatus(`Không lành mạnh cho các nhóm nhạy cảm`)\r\n      setFace(`/aqi/ic-face-orange.svg`)\r\n    }\r\n    else if (props <= 200 && props >= 151) {\r\n      setStatus(`Không lành mạnh`)\r\n      setFace(`/aqi/ic-face-red.svg`)\r\n    }\r\n    else if (props <= 300 && props >= 201) {\r\n      setStatus(`Rất không lành mạnh`)\r\n      setFace(`/aqi/ic-face-purple.svg`)\r\n    }\r\n    else if (props > 301) {\r\n      setStatus(`Nguy hiểm`)\r\n      setFace(`/aqi/ic-face-maroon.svg`)\r\n    }\r\n    else {\r\n      setStatus(`Không có thông tin`)\r\n      setFace(`/aqi/ic-face-green.svg`)\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    renderStatus(nearestCity?.current?.pollution?.aqius)\r\n  }, [nearestCity?.current?.pollution?.aqius])\r\n\r\n\r\n  return (\r\n    <div className='aqi-overview'>\r\n      <OverViewSumary props={nearestCity?.current?.pollution?.aqius}>\r\n        <AqiValueWrapper>\r\n          <AqiBox props={nearestCity?.current?.pollution?.aqius}>\r\n            <AqiUnit>US AQI</AqiUnit>\r\n            <br />\r\n            <AqiValue>{nearestCity?.current?.pollution?.aqius} *</AqiValue>\r\n\r\n          </AqiBox>\r\n          <AqiStatus>\r\n            <span>chỉ số AQI trực tiếp</span>\r\n            <br />\r\n            <AqiContent props={nearestCity?.current?.pollution?.aqius||0}>{status}</AqiContent>\r\n          </AqiStatus>\r\n\r\n          <img src={face} alt=\"img\" width={116} height={116} />\r\n        </AqiValueWrapper>\r\n      </OverViewSumary>\r\n      <OverViewDetail>\r\n        <OverViewSectionTitle>Tổng quan</OverViewSectionTitle>\r\n        <OverViewTittle>Chất lượng không khí hiện tại gần {nearestCity?.city || \"Hanoi\"}, {nearestCity?.country || \"Vietnam\"} như thế nào?</OverViewTittle>\r\n      </OverViewDetail>\r\n\r\n      <TableDetail>\r\n        <TableThread>\r\n          <tr style={{ height: '48px' }}>\r\n            <TableContent>Mức ô nhiễm không khí</TableContent>\r\n            <TableContent>Chỉ số chất lượng không khí</TableContent>\r\n            <TableContent>Chất gây ô nhiễm chính</TableContent>\r\n          </tr>\r\n        </TableThread>\r\n        <tbody>\r\n          <tr className=\"bg-blue-200 lg:text-black\" style={{ textAlign: '-webkit-center', background: '#BED6E3' }}>\r\n            <td className=\"p-3 ml-3 font-medium capitalize\">{status}</td>\r\n            <td className=\"p-3 ml-3\">{nearestCity?.current?.pollution?.aqius} US AQI</td>\r\n            <td className=\"p-3 ml-3\">{nearestCity?.current?.pollution?.mainus === \"p2\" && <p>PM2.5</p>}</td>\r\n          </tr>\r\n        </tbody>\r\n      </TableDetail>\r\n\r\n      <OverViewDetail style={{ display: 'flex' }}>\r\n        <div style={{ display: 'block' }}>\r\n          <OverViewSectionTitle>Thời tiết</OverViewSectionTitle>\r\n          <OverViewTittle>Thời tiết hiện tại ở {nearestCity?.city || \"Hanoi\"}, {nearestCity?.country || \"Vietnam\"} ra sao?</OverViewTittle>\r\n        </div>\r\n        <img\r\n          src={`/aqi/${nearestCity?.current?.weather?.ic ||`01d`}.png`}\r\n          alt=\"img\"\r\n          width={100}\r\n          height={100}\r\n          style={{ right: 0, position: 'absolute', marginRight: 40, paddingBottom: 30 }} />\r\n      </OverViewDetail>\r\n\r\n      <TableDetail>\r\n        <tbody>\r\n          <TableWeatherTr style={{ background: '#BED6E3' }}>\r\n            <TableWeatherTd  >Thời tiết</TableWeatherTd>\r\n            <TableWeatherTd style={{ fontWeight: 600, borderRadius: '0 0.625rem  0.625rem 0' }}>{nearestCity?.current?.pollution?.aqius} US AQI</TableWeatherTd>\r\n          </TableWeatherTr>\r\n          <TableWeatherTr>\r\n            <TableWeatherTd >Nhiệt độ</TableWeatherTd>\r\n            <TableWeatherTd style={{ fontWeight: 600, borderRadius: '0 0.625rem  0.625rem 0' }}>{nearestCity?.current?.weather?.tp} Celcius</TableWeatherTd>\r\n          </TableWeatherTr>\r\n          <TableWeatherTr style={{ background: '#BED6E3' }}>\r\n            <TableWeatherTd >Độ ẩm</TableWeatherTd>\r\n            <TableWeatherTd style={{ fontWeight: 600, borderRadius: '0 0.625rem  0.625rem 0' }}>{nearestCity?.current?.weather?.hu} %</TableWeatherTd>\r\n          </TableWeatherTr>\r\n          <TableWeatherTr>\r\n            <TableWeatherTd >Gió</TableWeatherTd>\r\n            <TableWeatherTd style={{ fontWeight: 600, borderRadius: '0 0.625rem  0.625rem 0' }}>{nearestCity?.current?.weather?.ws} km/h</TableWeatherTd>\r\n          </TableWeatherTr>\r\n          <TableWeatherTr style={{ background: '#BED6E3' }}>\r\n            <TableWeatherTd >Áp suất</TableWeatherTd>\r\n            <TableWeatherTd style={{ fontWeight: 600, borderRadius: '0 0.625rem  0.625rem 0' }}>{nearestCity?.current?.weather?.pr} mb</TableWeatherTd>\r\n          </TableWeatherTr>\r\n        </tbody>\r\n      </TableDetail>\r\n    </div>\r\n  )\r\n}\r\nconst NearestCityInfo = () => <MapContextProvider><NearestCityInfoImpl /></MapContextProvider>\r\nexport default memo(NearestCityInfo)\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\screens\\Devices\\components\\ModalDevices.js",["194"],"import React, { useState } from 'react'\r\nimport { X } from 'react-feather'\r\nimport tw from 'twin.macro'\r\nimport { toastError } from '../../../constant/toast'\r\nimport { useDevicesContext } from '../context'\r\nimport '../style.css'\r\n\r\nconst LabelText = tw.label`float-left mb-3 text-black`\r\nconst ContainerModal = tw.div`w-full`\r\nconst PillButton = tw.input`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full border-none w-full mt-4`\r\nconst ModalDevices = ({ item }) => {\r\n  const [deviceName, setDeviceName] = useState(item?.deviceName)\r\n  const { updateDevice, setOpenModal } = useDevicesContext()\r\n  const [stateDevice, setStateDevice] = useState(item?.connectState)\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-window\">\r\n        <ContainerModal>\r\n          <form onSubmit={(e) => {\r\n            e.preventDefault()\r\n            // if (deviceName !== item?.deviceName && stateDevice !== item?.connectState) {\r\n            //   console.log(\"deviceName = \", deviceName)\r\n            //   console.log(\"connectState = \", stateDevice)\r\n            //   updateDevice(item?._id, deviceName, stateDevice)\r\n            // }\r\n            //   else toastError('Nothing was changed!')\r\n            updateDevice(item?._id, deviceName, stateDevice)\r\n\r\n          }}>\r\n            <div className=\"modal-close\" onClick={() => setOpenModal(false)}><X /></div>\r\n            <h1 style={{ color: 'black' }}>Device</h1><br />\r\n            <LabelText>Device Name</LabelText>\r\n            <input type=\"text\" className='inputdevice' placeholder='Device Name' defaultValue={item?.deviceName} onChange={(e) => setDeviceName(e.target.value)} />\r\n            <LabelText>Device State</LabelText>\r\n            <div style={{ float: 'right' }}>\r\n              <label className=\"switch\">\r\n                <input type=\"checkbox\" defaultChecked={item?.connectState === \"ON\"} onChange={e => setStateDevice(e.target.checked ? \"ON\" : \"OFF\")} />\r\n                <span className=\"slider round\"></span>\r\n              </label>\r\n            </div>\r\n            <PillButton type=\"submit\" value=\"Save\" />\r\n          </form>\r\n        </ContainerModal>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default ModalDevices\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\utils\\iDate.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\layout\\components\\NavTop\\NavUser.js",["195","196","197"],"import { motion } from 'framer-motion';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { LogOut, User } from 'react-feather';\r\nimport { useNavigate } from 'react-router';\r\nimport tw, { styled } from 'twin.macro';\r\nimport avatarDefault from '../../../assets/avatar_default.png';\r\nimport DarkMode from '../../../ModeScreen/DarkMode';\r\nimport './style.css'\r\nimport useAuthen from '../../../hooks/useAuthen'\r\nimport { getUserInfo, logoutUser } from '../../../services/authenService';\r\nimport { useCookies } from 'react-cookie';\r\nconst RightNavBar = tw.div`flex items-center ml-auto`\r\nconst UserContainer = styled.div`\r\n  ${[`height:78px;`, tw`hidden items-center cursor-pointer sm:flex relative `]}\r\n`\r\nconst Avatar = tw.img`h-12 w-12 rounded-full hover:bg-blue-300 object-cover ml-3`\r\nconst NameUser = styled.div`\r\n    ${`max-width:11.5rem;`}\r\n    ${tw`text-lg font-bold mx-4 truncate`}\r\n`\r\nconst Span = tw.span`ml-3`\r\nconst Dropdown = styled(motion.div)(() => [\r\n  tw`h-auto w-48 border-t-default border-blue-400 shadow-md mt-4 absolute flex flex-col`,\r\n])\r\nconst DropdownItem = tw.div`w-full flex p-2 cursor-pointer my-1 text-lg font-medium border-b-default transform transition-all duration-75 hover:(text-blue-400 text-xl)`\r\n\r\nconst NavUser = () => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [avatar, setAvatar] = useState(null);\r\n  const history = useNavigate()\r\n  const { username, isAuthenticated, setIsAuthenticated } = useAuthen()\r\n  const [cookies, setCookie, removeCookie] = useCookies([\"currentuser\"]);\r\n  const navigate = useNavigate()\r\n\r\n  const UserOptions = [\r\n    { id: 'profile', name: \"Infomation\", link: \"/user-profile\", display: true, icon: <User /> },\r\n    // { id: 'change_password', name: \"Đổi mật khẩu\", link: \"/change-password\", display: (idp === \"local\") ? true : false, icon: <Key /> },\r\n    { id: 'logout', name: \"Logout\", link: \"\", display: true, icon: <LogOut /> }\r\n  ];\r\n\r\n  const handleMouseMove = useCallback((isOpen) => {\r\n    setIsOpen(isOpen)\r\n  }, [])\r\n\r\n  const handleItemClick = async ({ id, link }) => {\r\n    if (id === 'logout') {\r\n      await logoutUser()\r\n      removeCookie(\"currentuser\")\r\n      removeCookie(\"userid\")\r\n      const res = await getUserInfo()\r\n      console.log('res', res);\r\n\r\n      console.log('window.location.pathname', window.location.pathname);\r\n      if (window.location.pathname === '/') {\r\n        console.log('first');\r\n        window.location.reload()\r\n      }\r\n\r\n      else \r\n      {\r\n        console.log('isAuthenticated', isAuthenticated);\r\n        setIsAuthenticated(false)\r\n        navigate('/')\r\n        window.location.reload()\r\n      }\r\n        \r\n    }\r\n    else\r\n      link && history(link);\r\n  }\r\n\r\n  return (\r\n    <RightNavBar>\r\n      <UserContainer className=\"group\" onMouseMove={() => handleMouseMove(true)} onMouseLeave={() => handleMouseMove(false)}>\r\n        <Avatar src={avatar ? avatar : avatarDefault} alt=\"avatar\" />\r\n        <NameUser>{username || \"User\"}</NameUser>\r\n        <Dropdown\r\n          className=\"bg-memu-bar\"\r\n          variants={{\r\n            current: {\r\n              opacity: 1,\r\n              y: 79,\r\n              display: \"\",\r\n            },\r\n            hidden: {\r\n              opacity: 0,\r\n              y: 135,\r\n              display: \"none\",\r\n            },\r\n          }}\r\n          transition={{ duration: 0.2 }}\r\n          initial={'hidden'}\r\n          animate={isOpen ? 'current' : 'hidden'}\r\n        >\r\n          {UserOptions.map(({ id, link, name, display, icon }) =>\r\n            display && <DropdownItem\r\n              key={id}\r\n              onClick={() => handleItemClick({ id, link })}>\r\n              {icon}\r\n              <Span>{name}</Span>\r\n            </DropdownItem>\r\n          )}\r\n        </Dropdown>\r\n      </UserContainer>&nbsp;&nbsp;\r\n      <DarkMode />\r\n    </RightNavBar>\r\n  )\r\n}\r\nexport default NavUser\r\n","D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\configs\\navTopConfigs.js",[],"D:\\IoT và ứng dụng\\IoT_Project\\Frontend_IOT\\src\\ModeScreen\\DarkMode.js",[],{"ruleId":"198","severity":1,"message":"199","line":14,"column":9,"nodeType":"200","messageId":"201","endLine":14,"endColumn":18},{"ruleId":"198","severity":1,"message":"202","line":19,"column":9,"nodeType":"200","messageId":"201","endLine":19,"endColumn":21},{"ruleId":"198","severity":1,"message":"203","line":23,"column":21,"nodeType":"200","messageId":"201","endLine":23,"endColumn":30},{"ruleId":"198","severity":1,"message":"204","line":23,"column":32,"nodeType":"200","messageId":"201","endLine":23,"endColumn":42},{"ruleId":"198","severity":1,"message":"205","line":7,"column":10,"nodeType":"200","messageId":"201","endLine":7,"endColumn":17},{"ruleId":"198","severity":1,"message":"206","line":7,"column":30,"nodeType":"200","messageId":"201","endLine":7,"endColumn":42},{"ruleId":"207","severity":1,"message":"208","line":30,"column":6,"nodeType":"209","endLine":30,"endColumn":23,"suggestions":"210"},{"ruleId":"198","severity":1,"message":"211","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":25},{"ruleId":"198","severity":1,"message":"212","line":32,"column":7,"nodeType":"200","messageId":"201","endLine":32,"endColumn":13},{"ruleId":"198","severity":1,"message":"213","line":35,"column":7,"nodeType":"200","messageId":"201","endLine":35,"endColumn":18},{"ruleId":"198","severity":1,"message":"214","line":38,"column":7,"nodeType":"200","messageId":"201","endLine":38,"endColumn":13},{"ruleId":"198","severity":1,"message":"215","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":21},{"ruleId":"198","severity":1,"message":"216","line":16,"column":9,"nodeType":"200","messageId":"201","endLine":16,"endColumn":17},{"ruleId":"198","severity":1,"message":"205","line":17,"column":10,"nodeType":"200","messageId":"201","endLine":17,"endColumn":17},{"ruleId":"198","severity":1,"message":"206","line":17,"column":30,"nodeType":"200","messageId":"201","endLine":17,"endColumn":42},{"ruleId":"198","severity":1,"message":"217","line":18,"column":10,"nodeType":"200","messageId":"201","endLine":18,"endColumn":16},{"ruleId":"198","severity":1,"message":"218","line":18,"column":18,"nodeType":"200","messageId":"201","endLine":18,"endColumn":27},{"ruleId":"207","severity":1,"message":"219","line":65,"column":5,"nodeType":"209","endLine":65,"endColumn":7,"suggestions":"220"},{"ruleId":"207","severity":1,"message":"221","line":86,"column":5,"nodeType":"209","endLine":86,"endColumn":55,"suggestions":"222"},{"ruleId":"198","severity":1,"message":"223","line":15,"column":23,"nodeType":"200","messageId":"201","endLine":15,"endColumn":37},{"ruleId":"198","severity":1,"message":"224","line":10,"column":7,"nodeType":"200","messageId":"201","endLine":10,"endColumn":16},{"ruleId":"198","severity":1,"message":"216","line":15,"column":9,"nodeType":"200","messageId":"201","endLine":15,"endColumn":17},{"ruleId":"198","severity":1,"message":"225","line":3,"column":9,"nodeType":"200","messageId":"201","endLine":3,"endColumn":29},{"ruleId":"198","severity":1,"message":"226","line":78,"column":9,"nodeType":"200","messageId":"201","endLine":78,"endColumn":13},{"ruleId":"227","severity":1,"message":"228","line":9,"column":13,"nodeType":"229","endLine":13,"endColumn":15},{"ruleId":"207","severity":1,"message":"230","line":42,"column":6,"nodeType":"209","endLine":42,"endColumn":8,"suggestions":"231"},{"ruleId":"207","severity":1,"message":"232","line":100,"column":6,"nodeType":"209","endLine":100,"endColumn":46,"suggestions":"233"},{"ruleId":"198","severity":1,"message":"234","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":20},{"ruleId":"198","severity":1,"message":"235","line":29,"column":18,"nodeType":"200","messageId":"201","endLine":29,"endColumn":27},{"ruleId":"198","severity":1,"message":"205","line":32,"column":10,"nodeType":"200","messageId":"201","endLine":32,"endColumn":17},{"ruleId":"198","severity":1,"message":"236","line":32,"column":19,"nodeType":"200","messageId":"201","endLine":32,"endColumn":28},"no-unused-vars","'getConfig' is assigned a value but never used.","Identifier","unusedVar","'renderRouter' is assigned a value but never used.","'Component' is assigned a value but never used.","'fullLayout' is assigned a value but never used.","'cookies' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCookie'. Either include it or remove the dependency array.","ArrayExpression",["237"],"'useState' is defined but never used.","'Title2' is assigned a value but never used.","'ButtonTouch' is assigned a value but never used.","'Avatar' is assigned a value but never used.","'memo' is defined but never used.","'navigate' is assigned a value but never used.","'userid' is assigned a value but never used.","'setUserid' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'handleLogin' and 'handleSignup'. Either include them or remove the dependency array.",["238"],"React Hook useMemo has missing dependencies: 'addDevice' and 'updateDevice'. Either include them or remove the dependency array.",["239"],"'setStateDevice' is assigned a value but never used.","'SearchBar' is assigned a value but never used.","'useStatisticsContext' is defined but never used.","'Open' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["240"],"React Hook useEffect has a missing dependency: 'nearestCity'. Either include it or remove the dependency array.",["241"],"'toastError' is defined but never used.","'setAvatar' is assigned a value but never used.","'setCookie' is assigned a value but never used.",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [isAuthenticated, setCookie]",{"range":"252","text":"253"},"Update the dependencies array to be: [handleLogin, handleSignup]",{"range":"254","text":"255"},"Update the dependencies array to be: [listDevices, updateDevice, openModal, deviceItem, openAddModal, addDevice]",{"range":"256","text":"257"},"Update the dependencies array to be: [fetchData]",{"range":"258","text":"259"},"Update the dependencies array to be: [nearestCity, nearestCity.current.pollution.aqius]",{"range":"260","text":"261"},[929,946],"[isAuthenticated, setCookie]",[1846,1848],"[handleLogin, handleSignup]",[2770,2820],"[listDevices, updateDevice, openModal, deviceItem, openAddModal, addDevice]",[1104,1106],"[fetchData]",[3344,3384],"[nearestCity, nearestCity.current.pollution.aqius]"]